/* caesar cypher problem */
clear;

function share(n)
    d := n div 5;
    b := 5*d;
    e := n-b;
    
    A := [d, d, d, d, d+e];
    
    if (e ne 0) then 
        if (A[5] gt 4) then 
            max := 4;
        else
            max := A[5];
        end if;
        
        for i:=1 to max do A[i] := A[i] + 1; end for;
        A[5] := A[5] - max;
    end if;

    return A;
end function;

function share2(n)
    d := n div 5;
    m := n mod 5;

    A := [ d : x in {1..5} ];

    if m ne 0 then
        nn := n - 4*d;

        for i:=1 to 4 do
            if nn ne 0 then
                A[i] +:= 1;
                nn -:= 1;
            end if;
        end for;

        A[5] := nn;
    end if;

    return A; 
end function;

for i:=1 to 5000 do
    A := share(i);
    B := share2(i);

    if A ne B then
        print "A", A;
        print "B", B;
        print i;
    end if;
end for;












function share_v0(n)
    d := n div 5;
    b := 5*d;
    e := n-b;
    
    A := [d, d, d, d, d+e];

    if (A[5] gt A[4]) then 
        if (A[5] ge 4) then
            for i:=1 to 4 do A[i] := A[i] + 1; end for;
            A[5] := A[5] - 4;
        else
            for i:=1 to A[5] do A[i] := A[i] + 1; end for;
            A[5] := 0;
        end if;
    end if;

    return A;
end function;
